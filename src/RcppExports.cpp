// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read_svmlight_cpp
List read_svmlight_cpp(Rcpp::String filename, int zero_based);
RcppExport SEXP _sparsio_read_svmlight_cpp(SEXP filenameSEXP, SEXP zero_basedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type zero_based(zero_basedSEXP);
    rcpp_result_gen = Rcpp::wrap(read_svmlight_cpp(filename, zero_based));
    return rcpp_result_gen;
END_RCPP
}
// write_svmlight_cpp
void write_svmlight_cpp(S4 x, NumericVector y, Rcpp::String filename, int zero_based);
RcppExport SEXP _sparsio_write_svmlight_cpp(SEXP xSEXP, SEXP ySEXP, SEXP filenameSEXP, SEXP zero_basedSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type zero_based(zero_basedSEXP);
    write_svmlight_cpp(x, y, filename, zero_based);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sparsio_read_svmlight_cpp", (DL_FUNC) &_sparsio_read_svmlight_cpp, 2},
    {"_sparsio_write_svmlight_cpp", (DL_FUNC) &_sparsio_write_svmlight_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_sparsio(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
